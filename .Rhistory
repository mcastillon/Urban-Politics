update.packages()
rm(list=ls())
cd_density <- read.csv("C:/Users/mcast_000/Documents/Github/Urban Politics/cd_density.csv")
estimates <- read.csv("C:/Users/mcast_000/Documents/Github/Urban Politics/estimates.csv")
colnames(cd_density) <- tolower(colnames(cd_density))
colnames(cd_density)
colnames(estimates)
#### merge datasets together
dense_ideal <- merge(cd_density, estimates,
by.x=c("geography", "district"), by.y=c("state", "district"),
all=T)
is.na(dense_ideal)
dense_ideal$icpsr.id[is.na(dense_ideal$icpsr.id)] <- 0
dense_ideal[!complete.cases(dense_ideal),]
dense_ideal[396,"gender"] <- "M"
attach(dense_ideal)
rownames(dense_ideal) <- label
#### a basic OLS model seems to fit well
dense_lm <- lm(idealPoint~density.land)
summary(dense_lm)
##### but when we plot density against the ideal point, the line clearly doesn't fit well based on an eyetest
plot(density.land, idealPoint)
abline(reg=dense_lm)
library(moments)
hist(density.land)
jarque.test(density.land)
dense_ideal <- transform(dense_ideal, log_dense = log(density.land))
detach(dense_ideal)
library(moments)
install.packages("moments")
dense_ideal <- transform(dense_ideal, log_dense = log(density.land))
detach(dense_ideal)
attach(dense_ideal)
hist(log_dense)
detach(dense_ideal)
detach(dense_ideal)
attach(dense_ideal)
hist(log_dense)
jarque.test(log_dense)
library(moments)
jarque.test(density.land)
jarque.test(log_dense)
dense_lm_log <- lm(idealPoint~log_dense)
summary(dense_lm_log)
#### republicans are in the upper half of this plot while dems are in bottom
#### since republicans tend to be from more rural districts while dems are from more urban districts
plot(log_dense, idealPoint)
abline(reg=dense_lm_log)
#### so lets color accordingly
library(ggplot2)
library(scales)
ggplot(data=dense_ideal, aes(log_dense, idealPoint, colour=factor(party))) +
geom_point() + geom_smooth() + scale_color_manual(values=alpha(c("blue", "red"), .4))
#### looks like density appears to be correlated with Democratic voting patterns, but not GOP
library(lme4)
dense_lm_log_party <- lmList(data=dense_ideal, idealPoint~log_dense | factor(party))
install.packages("lme4")
library(lme4)
dense_lm_log_party <- lmList(data=dense_ideal, idealPoint~log_dense | factor(party))
summary(dense_lm_log_party)
d_fitted <- fortify(dense_lm_log_party$D)
ggplot(data=d_fitted, aes(log_dense, idealPoint)) +
geom_point() + geom_smooth()
detach(dense_ideal)
attach(d_fitted)
d_fitted <- transform(d_fitted, extreme = ifelse(abs(.stdresid)>1.5,1,0))
d_fitted$label <- rownames(d_fitted)
ggplot(data=d_fitted, aes(log_dense, idealPoint)) +
geom_point() + geom_smooth() +
geom_text(data=d_fitted[d_fitted$extreme == 1,], aes(label=label, size=abs(.stdresid), angle=45)) +
scale_size(range=c(3,5))
library(plyr)
arrange(d_fitted, idealPoint)
arrange(d_fitted, log_dense)
arrange(d_fitted, desc(.stdresid))[1:14,]
arrange(d_fitted, desc(.stdresid))[1:14,]
arrange(d_fitted, .stdresid)[1:14,]
cd_urban <- read.csv("C:/Users/mcast_000/Documents/Github/Urban Politics/cd_urban.csv")
dense_ideal_urb <- merge(dense_ideal, cd_urban,
by.x="target.geo.id", by.y="Id",
all.x=T)
dense_ideal_urb <- transform(dense_ideal_urb, pct_urban = Urban / Total)
detach(d_fitted)
attach(dense_ideal_urb)
### again we have a significant linear model when looking at idealPoint vs pct_urban
urb_lm <- lm(idealPoint ~ pct_urban)
summary(urb_lm)
### but again we fail the jarque bera test
plot(pct_urban, idealPoint)
abline(urb_lm)
jarque.test(pct_urban)
head(estimates)
jarque.test(pct_urban)
